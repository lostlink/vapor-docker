name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  build_matrix:
    runs-on: ubuntu-latest

    outputs:
      matrix_json: ${{ steps.matrix.outputs.data }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get changed Files
        id: files
        uses: jitterbit/get-changed-files@v1

      - name: Create Matrix JSON
        id: json
        run: |
          json=$(echo ${{ steps.files.outputs.all }} | sed 's/ /\n/g' | sed '/Dockerfile/!d' | jq -R 'split(" ") | map({path: (.), version: (.)}) | .[].version |= .[:-11]' | sed 's/"/\\"/g'
          echo ::set-output name=data::${json}

      - name: Build Dockerfile Matrix
        id: matrix
        run: |
          echo ::set-output name=data::${{ steps.json.outputs.data }}

  build_images:
    if: ${{ needs.build_matrix.outputs.matrix_json }}
    needs: build_matrix

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        dockerfile: ${{ fromJson(needs.build_matrix.outputs.matrix_json) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ${{ matrix.dockerfile.path }}
          push: true
          tags: lostlink/vapor:${{ matrix.dockerfile.version }}