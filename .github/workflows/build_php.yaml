name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  build_images:
    runs-on: ubuntu-latest
    concurrency: ${{ github.ref == 'refs/heads/main' && 'production' || 'develop' }}

    strategy:
      fail-fast: false
      matrix:
        os: ["debian","alpine"]
        php: ["8.0", "8.1"]
        target: ["lambda","fargate"]
        dockerfile: ["base", "octane", "puppeteer", "octane,puppeteer"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Prepare Dockerfile
        id: dockerfile
        run: |
          declare -a lines
          readarray -t lines < <(./build.sh -p ${{ matrix.php }} -o ${{ matrix.os }} -s ${{ matrix.dockerfile }} -t ${{ matrix.target }} --output-dockerfile-path --output-dockerfile-version --dockerfile-keep --no-build)
          echo "::set-output name=path::$(echo "${lines[0]}")";
          echo "::set-output name=version::$(echo "${lines[1]}")"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          file: ${{ steps.dockerfile.outputs.path }}
          push: true
          tags: lostlink/${{ matrix.target }}:${{ steps.dockerfile.outputs.version }}